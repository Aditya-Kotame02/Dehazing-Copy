{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya Kotame\\\\Desktop\\\\Dehazing\\\\Testing\\\\frontend\\\\src\\\\pages\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\n// import { Upload as ImageUpload } from \"./pages/ImageUpload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Upload() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [processedImages, setProcessedImages] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const BACKEND_URL = import.meta.env.VITE_BACKEND_URL || \"http://localhost:5000\";\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setPreview(URL.createObjectURL(file));\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert(\"Please select an image first.\");\n      return;\n    }\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"image\", selectedFile);\n    try {\n      const response = await axios.post(`${BACKEND_URL}/api/image/upload`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (response.data.dehazedImage && response.data.transmissionMap) {\n        setProcessedImages({\n          dehazed: `${BACKEND_URL}${response.data.dehazedImage}`,\n          transmission: `${BACKEND_URL}${response.data.transmissionMap}`\n        });\n      } else {\n        alert(\"Unexpected response from the server.\");\n      }\n    } catch (error) {\n      console.error(\"Error processing image:\", error);\n      alert(\"Image processing failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Image for Dehazing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      style: {\n        margin: \"10px\",\n        padding: \"10px 20px\",\n        fontSize: \"16px\",\n        cursor: \"pointer\"\n      },\n      children: loading ? \"Processing...\" : \"Upload & Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        gap: \"20px\",\n        marginTop: \"20px\"\n      },\n      children: [preview && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Original\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: preview,\n          alt: \"Original\",\n          style: {\n            width: \"250px\",\n            borderRadius: \"8px\",\n            boxShadow: \"0px 0px 10px rgba(0,0,0,0.2)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), (processedImages === null || processedImages === void 0 ? void 0 : processedImages.dehazed) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Dehazed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: processedImages.dehazed,\n          alt: \"Dehazed\",\n          style: {\n            width: \"250px\",\n            borderRadius: \"8px\",\n            boxShadow: \"0px 0px 10px rgba(0,0,0,0.2)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), (processedImages === null || processedImages === void 0 ? void 0 : processedImages.transmission) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Transmission Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: processedImages.transmission,\n          alt: \"Transmission Map\",\n          style: {\n            width: \"250px\",\n            borderRadius: \"8px\",\n            boxShadow: \"0px 0px 10px rgba(0,0,0,0.2)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"UcjtsX0x4dRdi2JRNmCSJ6yAP7Y=\");\n_c = Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","Upload","_s","selectedFile","setSelectedFile","preview","setPreview","processedImages","setProcessedImages","loading","setLoading","BACKEND_URL","import","meta","env","VITE_BACKEND_URL","handleFileChange","event","file","target","files","URL","createObjectURL","handleUpload","alert","formData","FormData","append","response","post","headers","data","dehazedImage","transmissionMap","dehazed","transmission","error","console","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","margin","fontSize","cursor","display","justifyContent","alignItems","gap","marginTop","src","alt","width","borderRadius","boxShadow","_c","$RefreshReg$"],"sources":["C:/Users/Aditya Kotame/Desktop/Dehazing/Testing/frontend/src/pages/ImageUpload.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n// import { Upload as ImageUpload } from \"./pages/ImageUpload\";\r\n\r\nexport default function Upload() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const [processedImages, setProcessedImages] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const BACKEND_URL = import.meta.env.VITE_BACKEND_URL || \"http://localhost:5000\";\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setSelectedFile(file);\r\n      setPreview(URL.createObjectURL(file));\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert(\"Please select an image first.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n    formData.append(\"image\", selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${BACKEND_URL}/api/image/upload`,\r\n        formData,\r\n        { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n      );\r\n\r\n      if (response.data.dehazedImage && response.data.transmissionMap) {\r\n        setProcessedImages({\r\n          dehazed: `${BACKEND_URL}${response.data.dehazedImage}`,\r\n          transmission: `${BACKEND_URL}${response.data.transmissionMap}`,\r\n        });\r\n      } else {\r\n        alert(\"Unexpected response from the server.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error processing image:\", error);\r\n      alert(\"Image processing failed. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h2>Upload Image for Dehazing</h2>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n      <br />\r\n      <button onClick={handleUpload} disabled={loading} style={{ margin: \"10px\", padding: \"10px 20px\", fontSize: \"16px\", cursor: \"pointer\" }}>\r\n        {loading ? \"Processing...\" : \"Upload & Process\"}\r\n      </button>\r\n\r\n      {/* Image Display Section in a Single Row */}\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", gap: \"20px\", marginTop: \"20px\" }}>\r\n        {preview && (\r\n          <div>\r\n            <h4>Original</h4>\r\n            <img src={preview} alt=\"Original\" style={{ width: \"250px\", borderRadius: \"8px\", boxShadow: \"0px 0px 10px rgba(0,0,0,0.2)\" }} />\r\n          </div>\r\n        )}\r\n\r\n        {processedImages?.dehazed && (\r\n          <div>\r\n            <h4>Dehazed</h4>\r\n            <img src={processedImages.dehazed} alt=\"Dehazed\" style={{ width: \"250px\", borderRadius: \"8px\", boxShadow: \"0px 0px 10px rgba(0,0,0,0.2)\" }} />\r\n          </div>\r\n        )}\r\n\r\n        {processedImages?.transmission && (\r\n          <div>\r\n            <h4>Transmission Map</h4>\r\n            <img src={processedImages.transmission} alt=\"Transmission Map\" style={{ width: \"250px\", borderRadius: \"8px\", boxShadow: \"0px 0px 10px rgba(0,0,0,0.2)\" }} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}