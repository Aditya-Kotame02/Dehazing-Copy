{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya Kotame\\\\Dehazing-Copy\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Line, Bar } from 'react-chartjs-2';\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   BarElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n// } from 'chart.js';\n\n// // Register Chart.js components\n// ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   BarElement,\n//   Title,\n//   Tooltip,\n//   Legend\n// );\n\n// const Dashboard = () => {\n//   const [systemStats, setSystemStats] = useState({\n//     processedImages: 0,\n//     successfulImages: 0,\n//     avgProcessingTime: 0,\n//     successRate: 0,\n//     psnr: 0,\n//   });\n//   const [processingHistory, setProcessingHistory] = useState([]);\n//   const [performanceMetrics, setPerformanceMetrics] = useState({\n//     psnr: 0,\n//   });\n//   const [recentActivity, setRecentActivity] = useState([]);\n\n//   // WebSocket connection\n//   useEffect(() => {\n//     const ws = new WebSocket(\"ws://localhost:5000\");\n\n//     ws.onopen = () => {\n//       console.log(\"WebSocket connected\");\n//     };\n\n//     ws.onmessage = (event) => {\n//       const message = JSON.parse(event.data);\n//       console.log(\"Received WebSocket message:\", message);\n\n//       if (message.type === \"stats\") {\n//         console.log(\"Updating system stats with:\", message.data);\n//         setSystemStats(message.data); // Update system stats in real-time\n//       }\n//     };\n\n//     ws.onclose = () => {\n//       console.log(\"WebSocket disconnected\");\n//     };\n\n//     ws.onerror = (error) => {\n//       console.error(\"WebSocket error:\", error);\n//     };\n\n//     // Cleanup WebSocket connection on component unmount\n//     return () => {\n//       ws.close();\n//     };\n//   }, []); // Empty dependency array ensures this runs only once\n\n//   // Log updated system stats\n//   useEffect(() => {\n//     console.log(\"Updated systemStats:\", systemStats);\n//   }, [systemStats]);\n\n//   // Fetch initial data from the backend\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         console.log(\"Fetching system stats...\");\n//         const statsResponse = await axios.get('http://localhost:5000/api/system-stats');\n//         console.log(\"System stats response:\", statsResponse.data);\n\n//         console.log(\"Fetching processing history...\");\n//         const historyResponse = await axios.get('http://localhost:5000/api/processing-history');\n//         console.log(\"Processing history response:\", historyResponse.data);\n\n//         console.log(\"Fetching performance metrics...\");\n//         const metricsResponse = await axios.get('http://localhost:5000/api/performance-metrics');\n//         console.log(\"Performance metrics response:\", metricsResponse.data);\n\n//         console.log(\"Fetching recent activity...\");\n//         const activityResponse = await axios.get('http://localhost:5000/api/recent-activity');\n//         console.log(\"Recent activity response:\", activityResponse.data);\n\n//         // Update state with fetched data\n//         setSystemStats(statsResponse.data);\n//         setProcessingHistory(historyResponse.data);\n//         setPerformanceMetrics(metricsResponse.data);\n//         setRecentActivity(activityResponse.data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   // Chart data for processing history\n//   const historyChartData = {\n//     labels: processingHistory.map((entry) => entry.date),\n//     datasets: [\n//       {\n//         label: 'Processed Images',\n//         data: processingHistory.map((entry) => entry.count),\n//         borderColor: 'rgba(75, 192, 192, 1)',\n//         backgroundColor: 'rgba(75, 192, 192, 0.2)',\n//       },\n//     ],\n//   };\n\n//   // Chart data for PSNR\n//   const psnrChartData = {\n//     labels: ['PSNR'],\n//     datasets: [\n//       {\n//         label: 'PSNR',\n//         data: [systemStats.psnr],\n//         backgroundColor: 'rgba(153, 102, 255, 0.2)',\n//         borderColor: 'rgba(153, 102, 255, 1)',\n//       },\n//     ],\n//   };\n\n//   return (\n//     <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\n//   {systemStats ? (\n//     <>\n//       <div className=\"bg-white p-6 rounded-lg shadow-md\">\n//         <h2 className=\"text-xl font-semibold\">Processed Images</h2>\n//         <p className=\"text-2xl\">{systemStats.processedImages ?? \"N/A\"}</p>\n//       </div>\n//       <div className=\"bg-white p-6 rounded-lg shadow-md\">\n//         <h2 className=\"text-xl font-semibold\">Successful Images</h2>\n//         <p className=\"text-2xl\">{systemStats.successfulImages ?? \"N/A\"}</p>\n//       </div>\n//       <div className=\"bg-white p-6 rounded-lg shadow-md\">\n//         <h2 className=\"text-xl font-semibold\">Avg. Processing Time</h2>\n//         <p className=\"text-2xl\">\n//           {systemStats.avgProcessingTime !== undefined \n//             ? `${systemStats.avgProcessingTime.toFixed(2)} ms` \n//             : \"N/A\"}\n//         </p>\n//       </div>\n//       <div className=\"bg-white p-6 rounded-lg shadow-md\">\n//         <h2 className=\"text-xl font-semibold\">Success Rate</h2>\n//         <p className=\"text-2xl\">\n//           {systemStats.successRate !== undefined \n//             ? `${systemStats.successRate.toFixed(2)}%` \n//             : \"N/A\"}\n//         </p>\n//       </div>\n//       <div className=\"bg-white p-6 rounded-lg shadow-md\">\n//         <h2 className=\"text-xl font-semibold\">Accuracy</h2>\n//         <p className=\"text-2xl\">\n//           {systemStats.accuracy !== undefined \n//             ? `${systemStats.accuracy.toFixed(2)}%` \n//             : \"N/A\"}\n//         </p>\n//       </div>\n//     </>\n//   ) : (\n//     <p className=\"text-center text-gray-500\">Loading system statistics...</p>\n//   )}\n// </div>\n\n//       {/* Processing History Chart */}\n//       <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\n//         <h2 className=\"text-xl font-semibold mb-4\">Processing History (Last 7 Days)</h2>\n//         <Line data={historyChartData} />\n//       </div>\n\n//       {/* Performance Metrics */}\n//       <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\n//         <h2 className=\"text-xl font-semibold mb-4\">Performance Metrics</h2>\n//         <Bar data={psnrChartData} />\n//       </div>\n\n//       {/* Recent Activity */}\n//       <div className=\"bg-white p-6 rounded-lg shadow-md\">\n//         <h2 className=\"text-xl font-semibold mb-4\">Recent Activity</h2>\n//         <ul>\n//           {recentActivity.map((activity, index) => (\n//             <li key={index} className=\"mb-2\">\n//               {activity.description} - <span className=\"text-gray-500\">{activity.timestamp}</span>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import { Line, Bar } from \"react-chartjs-2\";\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   BarElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n// } from \"chart.js\";\n\n// // Register Chart.js components\n// ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   BarElement,\n//   Title,\n//   Tooltip,\n//   Legend\n// );\n\n// const Dashboard = () => {\n//   const [systemStats, setSystemStats] = useState({\n//     processedImages: 0,\n//     successfulImages: 0,\n//     avgProcessingTime: 0,\n//     successRate: 0,\n//     psnr: 0,\n//     accuracy: 0, // Ensure accuracy is initialized\n//   });\n//   const [processingHistory, setProcessingHistory] = useState([]);\n//   const [recentActivity, setRecentActivity] = useState([]);\n//   const [performanceMetrics, setPerformanceMetrics] = useState({\n//     psnr: 0,\n//     accuracy: 0, // Add accuracy to performance metrics\n//   });\n\n//   // WebSocket connection for real-time updates\n//   useEffect(() => {\n//     const ws = new WebSocket(\"ws://localhost:5000\");\n\n//     ws.onopen = () => console.log(\"WebSocket connected\");\n//     ws.onmessage = (event) => {\n//       const message = JSON.parse(event.data);\n//       console.log(\"Received WebSocket message:\", message);\n\n//       if (message.type === \"stats\") {\n//         console.log(\"Updating system stats:\", message.data);\n//         setSystemStats(prev => ({\n//           ...prev,\n//           ...message.data,\n//           // Ensure accuracy is included in the update\n//           accuracy: message.data.accuracy !== undefined ? message.data.accuracy : prev.accuracy\n//         }));\n//       }\n//     };\n//     ws.onclose = () => console.log(\"WebSocket disconnected\");\n//     ws.onerror = (error) => console.error(\"WebSocket error:\", error);\n\n//     return () => ws.close();\n//   }, []);\n\n//   // Fetch initial data from the backend\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const [statsRes, historyRes, metricsRes, activityRes] = await Promise.all([\n//           axios.get(\"http://localhost:5000/api/system-stats\"),\n//           axios.get(\"http://localhost:5000/api/processing-history\"),\n//           axios.get(\"http://localhost:5000/api/performance-metrics\"), // Fetch performance metrics\n//           axios.get(\"http://localhost:5000/api/recent-activity\"),\n//         ]);\n\n//         setSystemStats(statsRes.data);\n//         setProcessingHistory(historyRes.data);\n//         setPerformanceMetrics(metricsRes.data); // Store performance metrics\n//         setRecentActivity(activityRes.data);\n\n//         console.log(\"Fetched performance metrics:\", metricsRes.data);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   // Chart data for processing history\n//   const historyChartData = {\n//     labels: processingHistory.map((entry) => entry.date),\n//     datasets: [\n//       {\n//         label: \"Processed Images\",\n//         data: processingHistory.map((entry) => entry.count),\n//         borderColor: \"rgba(79, 70, 229, 1)\",\n//         backgroundColor: \"rgba(79, 70, 229, 0.1)\",\n//         borderWidth: 2,\n//         tension: 0.1,\n//         fill: true,\n//       },\n//     ],\n//   };\n\n//   // Chart data for performance metrics (now includes accuracy)\n//   const performanceChartData = {\n//     labels: [\"PSNR\", \"Accuracy\"],\n//     datasets: [\n//       {\n//         label: \"Performance Metrics\",\n//         data: [\n//           performanceMetrics.psnr ?? 0,\n//           performanceMetrics.accuracy ?? 0\n//         ],\n//         backgroundColor: [\n//           \"rgba(99, 102, 241, 0.8)\",\n//           \"rgba(236, 72, 153, 0.8)\"\n//         ],\n//         borderColor: [\n//           \"rgba(79, 70, 229, 1)\",\n//           \"rgba(219, 39, 119, 1)\"\n//         ],\n//         borderWidth: 1,\n//       },\n//     ],\n//   };\n\n//   // UI Cards\n//   const statsCards = [\n//     { \n//       title: \"Processed Images\", \n//       value: systemStats.processedImages,\n//       color: \"bg-indigo-100 text-indigo-800\"\n//     },\n//     { \n//       title: \"Successful Images\", \n//       value: systemStats.successfulImages,\n//       color: \"bg-green-100 text-green-800\"\n//     },\n//     {\n//       title: \"Avg. Processing Time\",\n//       value:\n//         systemStats.avgProcessingTime !== undefined\n//           ? `${systemStats.avgProcessingTime.toFixed(2)} ms`\n//           : \"N/A\",\n//       color: \"bg-blue-100 text-blue-800\"\n//     },\n//     {\n//       title: \"Success Rate\",\n//       value:\n//         systemStats.successRate !== undefined\n//           ? `${systemStats.successRate.toFixed(2)}%`\n//           : \"N/A\",\n//       color: \"bg-purple-100 text-purple-800\"\n//     },\n//     {\n//       title: \"Accuracy\",\n//       value:\n//         systemStats.accuracy !== undefined\n//           ? `${systemStats.accuracy.toFixed(2)}%`\n//           : \"N/A\",\n//       color: \"bg-pink-100 text-pink-800\"\n//     },\n//   ];\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-50 p-4 md:p-8\">\n//       <h1 className=\"text-2xl md:text-3xl font-bold text-gray-800 mb-6\">System Dashboard</h1>\n\n//       {/* Stats Cards */}\n//       <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4 mb-8\">\n//         {statsCards.map((stat, index) => (\n//           <div \n//             key={index} \n//             className={`p-6 rounded-lg shadow-sm border ${stat.color} transition-all hover:shadow-md`}\n//           >\n//             <h2 className=\"text-sm font-medium uppercase tracking-wider\">{stat.title}</h2>\n//             <p className=\"text-2xl font-bold mt-2\">{stat.value ?? \"N/A\"}</p>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Main Content */}\n//       <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n//         {/* Processing History Chart */}\n//         <div className=\"lg:col-span-2 bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\n//           <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">\n//             Processing History (Last 7 Days)\n//           </h2>\n//           <div className=\"h-64\">\n//             <Line \n//               data={historyChartData} \n//               options={{\n//                 responsive: true,\n//                 maintainAspectRatio: false,\n//                 plugins: {\n//                   legend: {\n//                     position: 'top',\n//                   },\n//                 },\n//                 scales: {\n//                   y: {\n//                     beginAtZero: true\n//                   }\n//                 }\n//               }}\n//             />\n//           </div>\n//         </div>\n\n//         {/* Recent Activity */}\n//         <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\n//           <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Recent Activity</h2>\n//           <ul className=\"space-y-3\">\n//             {recentActivity.map((activity, index) => (\n//               <li \n//                 key={index} \n//                 className=\"p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors\"\n//               >\n//                 <p className=\"text-sm text-gray-700\">{activity.description}</p>\n//                 <span className=\"text-xs text-gray-500\">{activity.timestamp}</span>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n\n//         {/* Performance Metrics */}\n//         <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\n//           <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Performance Metrics</h2>\n//           <div className=\"h-64\">\n//             <Bar \n//               data={performanceChartData} \n//               options={{\n//                 responsive: true,\n//                 maintainAspectRatio: false,\n//                 plugins: {\n//                   legend: {\n//                     display: false\n//                   },\n//                 },\n//                 scales: {\n//                   y: {\n//                     beginAtZero: true,\n//                     max: 100 // Since accuracy is a percentage\n//                   }\n//                 }\n//               }}\n//             />\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend, ArcElement } from \"chart.js\";\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend, ArcElement);\nconst Dashboard = () => {\n  _s();\n  // System performance state\n  const [systemStats, setSystemStats] = useState({\n    processedImages: 0,\n    successfulImages: 0,\n    avgProcessingTime: 0,\n    successRate: 0,\n    psnr: 0,\n    accuracy: 0,\n    contrastImprovement: 0,\n    mse: 0,\n    edgeSharpness: 0,\n    fogDensity: \"Light\"\n  });\n\n  // Historical and analytical data\n  const [processingHistory, setProcessingHistory] = useState([]);\n  const [recentActivity, setRecentActivity] = useState([]);\n  const [imageStats, setImageStats] = useState({\n    formats: [],\n    resolutions: [],\n    topPerformers: [],\n    worstPerformers: []\n  });\n  const [timeTrends, setTimeTrends] = useState([]);\n\n  // Image inspection state\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [histogramData, setHistogramData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [ws, setWs] = useState(null);\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    const websocket = new WebSocket(\"ws://localhost:5000\");\n    setWs(websocket);\n    websocket.onopen = () => {\n      console.log(\"WebSocket connected\");\n      setIsLoading(false);\n    };\n    websocket.onmessage = event => {\n      const message = JSON.parse(event.data);\n      console.log(\"Received WebSocket message:\", message);\n      if (message.type === \"stats\") {\n        setSystemStats(message.data);\n      } else if (message.type === \"histogram\") {\n        setHistogramData(message.data);\n      } else if (message.type === \"activity\") {\n        setRecentActivity(prev => [message.data, ...prev.slice(0, 9)]);\n      }\n    };\n    websocket.onerror = error => {\n      console.error(\"WebSocket error:\", error);\n    };\n    websocket.onclose = () => {\n      console.log(\"WebSocket disconnected\");\n    };\n    return () => {\n      websocket.close();\n    };\n  }, []);\n\n  // Fetch initial data from backend\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const [statsRes, historyRes, imageStatsRes, timeTrendsRes, activityRes] = await Promise.all([axios.get(\"http://localhost:5000/api/system-stats\"), axios.get(\"http://localhost:5000/api/processing-history\"), axios.get(\"http://localhost:5000/api/image-stats\"), axios.get(\"http://localhost:5000/api/time-trends\"), axios.get(\"http://localhost:5000/api/recent-activity\")]);\n        setSystemStats(statsRes.data);\n        setProcessingHistory(historyRes.data);\n        setImageStats(imageStatsRes.data);\n        setTimeTrends(timeTrendsRes.data);\n        setRecentActivity(activityRes.data);\n      } catch (error) {\n        console.error(\"Error fetching initial data:\", error);\n      }\n    };\n    fetchInitialData();\n  }, []);\n\n  // Request histogram data when image is selected\n  useEffect(() => {\n    if (selectedImage && ws && ws.readyState === WebSocket.OPEN) {\n      ws.send(JSON.stringify({\n        type: \"requestHistogram\",\n        imageId: selectedImage._id\n      }));\n    }\n  }, [selectedImage, ws]);\n\n  // Chart data configurations\n  const historyChartData = {\n    labels: processingHistory.map(entry => entry.date),\n    datasets: [{\n      label: \"Processed Images\",\n      data: processingHistory.map(entry => entry.count),\n      borderColor: \"rgba(79, 70, 229, 1)\",\n      backgroundColor: \"rgba(79, 70, 229, 0.1)\",\n      borderWidth: 2,\n      tension: 0.1,\n      fill: true\n    }]\n  };\n  const performanceChartData = {\n    labels: [\"PSNR\", \"Accuracy\", \"Contrast\", \"Edge Sharpness\"],\n    datasets: [{\n      label: \"Performance Metrics\",\n      data: [systemStats.psnr, systemStats.accuracy, systemStats.contrastImprovement, systemStats.edgeSharpness],\n      backgroundColor: [\"rgba(99, 102, 241, 0.8)\", \"rgba(236, 72, 153, 0.8)\", \"rgba(16, 185, 129, 0.8)\", \"rgba(245, 158, 11, 0.8)\"],\n      borderColor: [\"rgba(79, 70, 229, 1)\", \"rgba(219, 39, 119, 1)\", \"rgba(5, 150, 105, 1)\", \"rgba(217, 119, 6, 1)\"],\n      borderWidth: 1\n    }]\n  };\n  const formatDistributionData = {\n    labels: imageStats.formats.map(f => f.format),\n    datasets: [{\n      data: imageStats.formats.map(f => f.count),\n      backgroundColor: [\"rgba(99, 102, 241, 0.8)\", \"rgba(236, 72, 153, 0.8)\", \"rgba(16, 185, 129, 0.8)\", \"rgba(245, 158, 11, 0.8)\"],\n      borderWidth: 1\n    }]\n  };\n  const timeTrendsData = {\n    labels: timeTrends.map(t => new Date(t.timestamp).toLocaleTimeString()),\n    datasets: [{\n      label: \"Processing Time (ms)\",\n      data: timeTrends.map(t => t.time),\n      borderColor: \"rgba(79, 70, 229, 1)\",\n      backgroundColor: \"rgba(79, 70, 229, 0.1)\",\n      borderWidth: 2,\n      tension: 0.1\n    }]\n  };\n  const histogramChartConfig = (channelData, channelColor) => ({\n    labels: Array.from({\n      length: 256\n    }, (_, i) => i),\n    datasets: [{\n      label: channelColor,\n      data: channelData,\n      backgroundColor: channelColor,\n      borderWidth: 0,\n      barPercentage: 1,\n      categoryPercentage: 1\n    }]\n  });\n\n  // UI Cards\n  const statsCards = [{\n    title: \"Processed Images\",\n    value: systemStats.processedImages,\n    color: \"bg-indigo-100 text-indigo-800\",\n    icon: \"📊\"\n  }, {\n    title: \"Success Rate\",\n    value: `${systemStats.successRate.toFixed(2)}%`,\n    color: \"bg-purple-100 text-purple-800\",\n    icon: \"✅\"\n  }, {\n    title: \"Avg Time\",\n    value: `${systemStats.avgProcessingTime.toFixed(2)} ms`,\n    color: \"bg-blue-100 text-blue-800\",\n    icon: \"⏱️\"\n  }, {\n    title: \"Fog Density\",\n    value: systemStats.fogDensity,\n    color: \"bg-gray-100 text-gray-800\",\n    icon: \"🌫️\"\n  }, {\n    title: \"Edge Sharpness\",\n    value: systemStats.edgeSharpness.toFixed(2),\n    color: \"bg-green-100 text-green-800\",\n    icon: \"🔍\"\n  }];\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-lg font-medium text-gray-700\",\n          children: \"Loading dashboard data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-4 md:p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl md:text-3xl font-bold text-gray-800\",\n        children: \"Dehazing Analytics Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Real-time monitoring of image processing performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4 mb-8\",\n      children: statsCards.map((stat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-6 rounded-lg shadow-sm border ${stat.color} transition-all hover:shadow-md`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl mr-3\",\n            children: stat.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-sm font-medium uppercase tracking-wider\",\n              children: stat.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold mt-1\",\n              children: stat.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2 bg-white p-6 rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800 mb-4\",\n          children: \"Processing History (Last 7 Days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-64\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: historyChartData,\n            options: {\n              responsive: true,\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  position: 'top'\n                },\n                tooltip: {\n                  callbacks: {\n                    label: context => `${context.dataset.label}: ${context.raw} images`\n                  }\n                }\n              },\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  title: {\n                    display: true,\n                    text: 'Number of Images'\n                  }\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800 mb-4\",\n          children: \"Quality Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-64\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: performanceChartData,\n            options: {\n              responsive: true,\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false\n                },\n                tooltip: {\n                  callbacks: {\n                    label: context => {\n                      const labels = [\"PSNR (dB)\", \"Accuracy (%)\", \"Contrast Δ\", \"Edge Sharpness\"];\n                      return `${labels[context.dataIndex]}: ${context.raw.toFixed(2)}`;\n                    }\n                  }\n                }\n              },\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  title: {\n                    display: true,\n                    text: 'Score'\n                  }\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800 mb-4\",\n          children: \"Image Format Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-64\",\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: formatDistributionData,\n            options: {\n              responsive: true,\n              maintainAspectRatio: false,\n              plugins: {\n                tooltip: {\n                  callbacks: {\n                    label: context => `${context.label}: ${context.raw} images (${context.raw / systemStats.processedImages * 100}%)`\n                  }\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800 mb-4\",\n          children: \"Processing Time Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-64\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: timeTrendsData,\n            options: {\n              responsive: true,\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  position: 'top'\n                },\n                tooltip: {\n                  callbacks: {\n                    label: context => `${context.dataset.label}: ${context.raw}ms`\n                  }\n                }\n              },\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  title: {\n                    display: true,\n                    text: 'Time (ms)'\n                  }\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800 mb-4\",\n          children: \"Performance Ranking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium text-green-700 mb-2\",\n              children: \"Top Performers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 872,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"space-y-2\",\n              children: imageStats.topPerformers.map((img, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: `flex justify-between p-2 rounded cursor-pointer hover:bg-gray-50 ${(selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage._id) === img._id ? 'bg-indigo-50' : ''}`,\n                onClick: () => setSelectedImage(img),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"truncate\",\n                  children: img.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 880,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: img.score.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 881,\n                  columnNumber: 21\n                }, this)]\n              }, `top-${i}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium text-red-700 mb-2\",\n              children: \"Worst Performers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"space-y-2\",\n              children: imageStats.worstPerformers.map((img, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: `flex justify-between p-2 rounded cursor-pointer hover:bg-gray-50 ${(selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage._id) === img._id ? 'bg-indigo-50' : ''}`,\n                onClick: () => setSelectedImage(img),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"truncate\",\n                  children: img.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 895,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: img.score.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 896,\n                  columnNumber: 21\n                }, this)]\n              }, `worst-${i}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 7\n    }, this), histogramData && selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-sm border border-gray-100 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800\",\n          children: [\"Histogram Analysis: \", selectedImage.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedImage(null),\n          className: \"text-sm text-indigo-600 hover:text-indigo-800\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center font-medium mb-2\",\n            children: \"Original Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-64\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: histogramChartConfig(histogramData.original.red, \"rgba(239, 68, 68, 0.7)\"),\n              options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false\n                  }\n                },\n                scales: {\n                  y: {\n                    beginAtZero: true\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-64 mt-4\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: histogramChartConfig(histogramData.original.green, \"rgba(34, 197, 94, 0.7)\"),\n              options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false\n                  }\n                },\n                scales: {\n                  y: {\n                    beginAtZero: true\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-64 mt-4\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: histogramChartConfig(histogramData.original.blue, \"rgba(59, 130, 246, 0.7)\"),\n              options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false\n                  }\n                },\n                scales: {\n                  y: {\n                    beginAtZero: true\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center font-medium mb-2\",\n            children: \"Dehazed Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-64\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: histogramChartConfig(histogramData.dehazed.red, \"rgba(239, 68, 68, 0.7)\"),\n              options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false\n                  }\n                },\n                scales: {\n                  y: {\n                    beginAtZero: true\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-64 mt-4\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: histogramChartConfig(histogramData.dehazed.green, \"rgba(34, 197, 94, 0.7)\"),\n              options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false\n                  }\n                },\n                scales: {\n                  y: {\n                    beginAtZero: true\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-64 mt-4\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: histogramChartConfig(histogramData.dehazed.blue, \"rgba(59, 130, 246, 0.7)\"),\n              options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false\n                  }\n                },\n                scales: {\n                  y: {\n                    beginAtZero: true\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 995,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-sm border border-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold text-gray-800 mb-4\",\n        children: \"Recent Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-3\",\n        children: recentActivity.map((activity, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-700\",\n              children: activity.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500\",\n              children: new Date(activity.timestamp).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1022,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1020,\n            columnNumber: 15\n          }, this), activity.details && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: activity.details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 733,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"mFgNwQ7K+Arurm5bfnSytBrKCuw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","Line","Bar","Pie","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","ArcElement","jsxDEV","_jsxDEV","register","Dashboard","_s","systemStats","setSystemStats","processedImages","successfulImages","avgProcessingTime","successRate","psnr","accuracy","contrastImprovement","mse","edgeSharpness","fogDensity","processingHistory","setProcessingHistory","recentActivity","setRecentActivity","imageStats","setImageStats","formats","resolutions","topPerformers","worstPerformers","timeTrends","setTimeTrends","selectedImage","setSelectedImage","histogramData","setHistogramData","isLoading","setIsLoading","ws","setWs","websocket","WebSocket","onopen","console","log","onmessage","event","message","JSON","parse","data","type","prev","slice","onerror","error","onclose","close","fetchInitialData","statsRes","historyRes","imageStatsRes","timeTrendsRes","activityRes","Promise","all","get","readyState","OPEN","send","stringify","imageId","_id","historyChartData","labels","map","entry","date","datasets","label","count","borderColor","backgroundColor","borderWidth","tension","fill","performanceChartData","formatDistributionData","f","format","timeTrendsData","t","Date","timestamp","toLocaleTimeString","time","histogramChartConfig","channelData","channelColor","Array","from","length","_","i","barPercentage","categoryPercentage","statsCards","title","value","color","icon","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","stat","index","options","responsive","maintainAspectRatio","plugins","legend","position","tooltip","callbacks","context","dataset","raw","scales","y","beginAtZero","display","text","dataIndex","img","onClick","name","score","original","red","green","blue","dehazed","activity","description","toLocaleString","details","_c","$RefreshReg$"],"sources":["C:/Users/Aditya Kotame/Dehazing-Copy/frontend/src/pages/Dashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { Line, Bar } from 'react-chartjs-2';\r\n// import {\r\n//   Chart as ChartJS,\r\n//   CategoryScale,\r\n//   LinearScale,\r\n//   PointElement,\r\n//   LineElement,\r\n//   BarElement,\r\n//   Title,\r\n//   Tooltip,\r\n//   Legend,\r\n// } from 'chart.js';\r\n\r\n// // Register Chart.js components\r\n// ChartJS.register(\r\n//   CategoryScale,\r\n//   LinearScale,\r\n//   PointElement,\r\n//   LineElement,\r\n//   BarElement,\r\n//   Title,\r\n//   Tooltip,\r\n//   Legend\r\n// );\r\n\r\n// const Dashboard = () => {\r\n//   const [systemStats, setSystemStats] = useState({\r\n//     processedImages: 0,\r\n//     successfulImages: 0,\r\n//     avgProcessingTime: 0,\r\n//     successRate: 0,\r\n//     psnr: 0,\r\n//   });\r\n//   const [processingHistory, setProcessingHistory] = useState([]);\r\n//   const [performanceMetrics, setPerformanceMetrics] = useState({\r\n//     psnr: 0,\r\n//   });\r\n//   const [recentActivity, setRecentActivity] = useState([]);\r\n\r\n//   // WebSocket connection\r\n//   useEffect(() => {\r\n//     const ws = new WebSocket(\"ws://localhost:5000\");\r\n\r\n//     ws.onopen = () => {\r\n//       console.log(\"WebSocket connected\");\r\n//     };\r\n\r\n//     ws.onmessage = (event) => {\r\n//       const message = JSON.parse(event.data);\r\n//       console.log(\"Received WebSocket message:\", message);\r\n\r\n//       if (message.type === \"stats\") {\r\n//         console.log(\"Updating system stats with:\", message.data);\r\n//         setSystemStats(message.data); // Update system stats in real-time\r\n//       }\r\n//     };\r\n\r\n//     ws.onclose = () => {\r\n//       console.log(\"WebSocket disconnected\");\r\n//     };\r\n\r\n//     ws.onerror = (error) => {\r\n//       console.error(\"WebSocket error:\", error);\r\n//     };\r\n\r\n//     // Cleanup WebSocket connection on component unmount\r\n//     return () => {\r\n//       ws.close();\r\n//     };\r\n//   }, []); // Empty dependency array ensures this runs only once\r\n\r\n//   // Log updated system stats\r\n//   useEffect(() => {\r\n//     console.log(\"Updated systemStats:\", systemStats);\r\n//   }, [systemStats]);\r\n\r\n//   // Fetch initial data from the backend\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         console.log(\"Fetching system stats...\");\r\n//         const statsResponse = await axios.get('http://localhost:5000/api/system-stats');\r\n//         console.log(\"System stats response:\", statsResponse.data);\r\n\r\n//         console.log(\"Fetching processing history...\");\r\n//         const historyResponse = await axios.get('http://localhost:5000/api/processing-history');\r\n//         console.log(\"Processing history response:\", historyResponse.data);\r\n\r\n//         console.log(\"Fetching performance metrics...\");\r\n//         const metricsResponse = await axios.get('http://localhost:5000/api/performance-metrics');\r\n//         console.log(\"Performance metrics response:\", metricsResponse.data);\r\n\r\n//         console.log(\"Fetching recent activity...\");\r\n//         const activityResponse = await axios.get('http://localhost:5000/api/recent-activity');\r\n//         console.log(\"Recent activity response:\", activityResponse.data);\r\n\r\n//         // Update state with fetched data\r\n//         setSystemStats(statsResponse.data);\r\n//         setProcessingHistory(historyResponse.data);\r\n//         setPerformanceMetrics(metricsResponse.data);\r\n//         setRecentActivity(activityResponse.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   // Chart data for processing history\r\n//   const historyChartData = {\r\n//     labels: processingHistory.map((entry) => entry.date),\r\n//     datasets: [\r\n//       {\r\n//         label: 'Processed Images',\r\n//         data: processingHistory.map((entry) => entry.count),\r\n//         borderColor: 'rgba(75, 192, 192, 1)',\r\n//         backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   // Chart data for PSNR\r\n//   const psnrChartData = {\r\n//     labels: ['PSNR'],\r\n//     datasets: [\r\n//       {\r\n//         label: 'PSNR',\r\n//         data: [systemStats.psnr],\r\n//         backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n//         borderColor: 'rgba(153, 102, 255, 1)',\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n//   {systemStats ? (\r\n//     <>\r\n//       <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n//         <h2 className=\"text-xl font-semibold\">Processed Images</h2>\r\n//         <p className=\"text-2xl\">{systemStats.processedImages ?? \"N/A\"}</p>\r\n//       </div>\r\n//       <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n//         <h2 className=\"text-xl font-semibold\">Successful Images</h2>\r\n//         <p className=\"text-2xl\">{systemStats.successfulImages ?? \"N/A\"}</p>\r\n//       </div>\r\n//       <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n//         <h2 className=\"text-xl font-semibold\">Avg. Processing Time</h2>\r\n//         <p className=\"text-2xl\">\r\n//           {systemStats.avgProcessingTime !== undefined \r\n//             ? `${systemStats.avgProcessingTime.toFixed(2)} ms` \r\n//             : \"N/A\"}\r\n//         </p>\r\n//       </div>\r\n//       <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n//         <h2 className=\"text-xl font-semibold\">Success Rate</h2>\r\n//         <p className=\"text-2xl\">\r\n//           {systemStats.successRate !== undefined \r\n//             ? `${systemStats.successRate.toFixed(2)}%` \r\n//             : \"N/A\"}\r\n//         </p>\r\n//       </div>\r\n//       <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n//         <h2 className=\"text-xl font-semibold\">Accuracy</h2>\r\n//         <p className=\"text-2xl\">\r\n//           {systemStats.accuracy !== undefined \r\n//             ? `${systemStats.accuracy.toFixed(2)}%` \r\n//             : \"N/A\"}\r\n//         </p>\r\n//       </div>\r\n//     </>\r\n//   ) : (\r\n//     <p className=\"text-center text-gray-500\">Loading system statistics...</p>\r\n//   )}\r\n// </div>\r\n\r\n//       {/* Processing History Chart */}\r\n//       <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\r\n//         <h2 className=\"text-xl font-semibold mb-4\">Processing History (Last 7 Days)</h2>\r\n//         <Line data={historyChartData} />\r\n//       </div>\r\n\r\n//       {/* Performance Metrics */}\r\n//       <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\r\n//         <h2 className=\"text-xl font-semibold mb-4\">Performance Metrics</h2>\r\n//         <Bar data={psnrChartData} />\r\n//       </div>\r\n\r\n//       {/* Recent Activity */}\r\n//       <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n//         <h2 className=\"text-xl font-semibold mb-4\">Recent Activity</h2>\r\n//         <ul>\r\n//           {recentActivity.map((activity, index) => (\r\n//             <li key={index} className=\"mb-2\">\r\n//               {activity.description} - <span className=\"text-gray-500\">{activity.timestamp}</span>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Line, Bar } from \"react-chartjs-2\";\r\n// import {\r\n//   Chart as ChartJS,\r\n//   CategoryScale,\r\n//   LinearScale,\r\n//   PointElement,\r\n//   LineElement,\r\n//   BarElement,\r\n//   Title,\r\n//   Tooltip,\r\n//   Legend,\r\n// } from \"chart.js\";\r\n\r\n// // Register Chart.js components\r\n// ChartJS.register(\r\n//   CategoryScale,\r\n//   LinearScale,\r\n//   PointElement,\r\n//   LineElement,\r\n//   BarElement,\r\n//   Title,\r\n//   Tooltip,\r\n//   Legend\r\n// );\r\n\r\n// const Dashboard = () => {\r\n//   const [systemStats, setSystemStats] = useState({\r\n//     processedImages: 0,\r\n//     successfulImages: 0,\r\n//     avgProcessingTime: 0,\r\n//     successRate: 0,\r\n//     psnr: 0,\r\n//     accuracy: 0, // Ensure accuracy is initialized\r\n//   });\r\n//   const [processingHistory, setProcessingHistory] = useState([]);\r\n//   const [recentActivity, setRecentActivity] = useState([]);\r\n//   const [performanceMetrics, setPerformanceMetrics] = useState({\r\n//     psnr: 0,\r\n//     accuracy: 0, // Add accuracy to performance metrics\r\n//   });\r\n\r\n//   // WebSocket connection for real-time updates\r\n//   useEffect(() => {\r\n//     const ws = new WebSocket(\"ws://localhost:5000\");\r\n\r\n//     ws.onopen = () => console.log(\"WebSocket connected\");\r\n//     ws.onmessage = (event) => {\r\n//       const message = JSON.parse(event.data);\r\n//       console.log(\"Received WebSocket message:\", message);\r\n\r\n//       if (message.type === \"stats\") {\r\n//         console.log(\"Updating system stats:\", message.data);\r\n//         setSystemStats(prev => ({\r\n//           ...prev,\r\n//           ...message.data,\r\n//           // Ensure accuracy is included in the update\r\n//           accuracy: message.data.accuracy !== undefined ? message.data.accuracy : prev.accuracy\r\n//         }));\r\n//       }\r\n//     };\r\n//     ws.onclose = () => console.log(\"WebSocket disconnected\");\r\n//     ws.onerror = (error) => console.error(\"WebSocket error:\", error);\r\n\r\n//     return () => ws.close();\r\n//   }, []);\r\n\r\n//   // Fetch initial data from the backend\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const [statsRes, historyRes, metricsRes, activityRes] = await Promise.all([\r\n//           axios.get(\"http://localhost:5000/api/system-stats\"),\r\n//           axios.get(\"http://localhost:5000/api/processing-history\"),\r\n//           axios.get(\"http://localhost:5000/api/performance-metrics\"), // Fetch performance metrics\r\n//           axios.get(\"http://localhost:5000/api/recent-activity\"),\r\n//         ]);\r\n\r\n//         setSystemStats(statsRes.data);\r\n//         setProcessingHistory(historyRes.data);\r\n//         setPerformanceMetrics(metricsRes.data); // Store performance metrics\r\n//         setRecentActivity(activityRes.data);\r\n        \r\n//         console.log(\"Fetched performance metrics:\", metricsRes.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   // Chart data for processing history\r\n//   const historyChartData = {\r\n//     labels: processingHistory.map((entry) => entry.date),\r\n//     datasets: [\r\n//       {\r\n//         label: \"Processed Images\",\r\n//         data: processingHistory.map((entry) => entry.count),\r\n//         borderColor: \"rgba(79, 70, 229, 1)\",\r\n//         backgroundColor: \"rgba(79, 70, 229, 0.1)\",\r\n//         borderWidth: 2,\r\n//         tension: 0.1,\r\n//         fill: true,\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   // Chart data for performance metrics (now includes accuracy)\r\n//   const performanceChartData = {\r\n//     labels: [\"PSNR\", \"Accuracy\"],\r\n//     datasets: [\r\n//       {\r\n//         label: \"Performance Metrics\",\r\n//         data: [\r\n//           performanceMetrics.psnr ?? 0,\r\n//           performanceMetrics.accuracy ?? 0\r\n//         ],\r\n//         backgroundColor: [\r\n//           \"rgba(99, 102, 241, 0.8)\",\r\n//           \"rgba(236, 72, 153, 0.8)\"\r\n//         ],\r\n//         borderColor: [\r\n//           \"rgba(79, 70, 229, 1)\",\r\n//           \"rgba(219, 39, 119, 1)\"\r\n//         ],\r\n//         borderWidth: 1,\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   // UI Cards\r\n//   const statsCards = [\r\n//     { \r\n//       title: \"Processed Images\", \r\n//       value: systemStats.processedImages,\r\n//       color: \"bg-indigo-100 text-indigo-800\"\r\n//     },\r\n//     { \r\n//       title: \"Successful Images\", \r\n//       value: systemStats.successfulImages,\r\n//       color: \"bg-green-100 text-green-800\"\r\n//     },\r\n//     {\r\n//       title: \"Avg. Processing Time\",\r\n//       value:\r\n//         systemStats.avgProcessingTime !== undefined\r\n//           ? `${systemStats.avgProcessingTime.toFixed(2)} ms`\r\n//           : \"N/A\",\r\n//       color: \"bg-blue-100 text-blue-800\"\r\n//     },\r\n//     {\r\n//       title: \"Success Rate\",\r\n//       value:\r\n//         systemStats.successRate !== undefined\r\n//           ? `${systemStats.successRate.toFixed(2)}%`\r\n//           : \"N/A\",\r\n//       color: \"bg-purple-100 text-purple-800\"\r\n//     },\r\n//     {\r\n//       title: \"Accuracy\",\r\n//       value:\r\n//         systemStats.accuracy !== undefined\r\n//           ? `${systemStats.accuracy.toFixed(2)}%`\r\n//           : \"N/A\",\r\n//       color: \"bg-pink-100 text-pink-800\"\r\n//     },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-50 p-4 md:p-8\">\r\n//       <h1 className=\"text-2xl md:text-3xl font-bold text-gray-800 mb-6\">System Dashboard</h1>\r\n      \r\n//       {/* Stats Cards */}\r\n//       <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4 mb-8\">\r\n//         {statsCards.map((stat, index) => (\r\n//           <div \r\n//             key={index} \r\n//             className={`p-6 rounded-lg shadow-sm border ${stat.color} transition-all hover:shadow-md`}\r\n//           >\r\n//             <h2 className=\"text-sm font-medium uppercase tracking-wider\">{stat.title}</h2>\r\n//             <p className=\"text-2xl font-bold mt-2\">{stat.value ?? \"N/A\"}</p>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* Main Content */}\r\n//       <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n//         {/* Processing History Chart */}\r\n//         <div className=\"lg:col-span-2 bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\r\n//           <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">\r\n//             Processing History (Last 7 Days)\r\n//           </h2>\r\n//           <div className=\"h-64\">\r\n//             <Line \r\n//               data={historyChartData} \r\n//               options={{\r\n//                 responsive: true,\r\n//                 maintainAspectRatio: false,\r\n//                 plugins: {\r\n//                   legend: {\r\n//                     position: 'top',\r\n//                   },\r\n//                 },\r\n//                 scales: {\r\n//                   y: {\r\n//                     beginAtZero: true\r\n//                   }\r\n//                 }\r\n//               }}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Recent Activity */}\r\n//         <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\r\n//           <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Recent Activity</h2>\r\n//           <ul className=\"space-y-3\">\r\n//             {recentActivity.map((activity, index) => (\r\n//               <li \r\n//                 key={index} \r\n//                 className=\"p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors\"\r\n//               >\r\n//                 <p className=\"text-sm text-gray-700\">{activity.description}</p>\r\n//                 <span className=\"text-xs text-gray-500\">{activity.timestamp}</span>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n\r\n//         {/* Performance Metrics */}\r\n//         <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\r\n//           <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Performance Metrics</h2>\r\n//           <div className=\"h-64\">\r\n//             <Bar \r\n//               data={performanceChartData} \r\n//               options={{\r\n//                 responsive: true,\r\n//                 maintainAspectRatio: false,\r\n//                 plugins: {\r\n//                   legend: {\r\n//                     display: false\r\n//                   },\r\n//                 },\r\n//                 scales: {\r\n//                   y: {\r\n//                     beginAtZero: true,\r\n//                     max: 100 // Since accuracy is a percentage\r\n//                   }\r\n//                 }\r\n//               }}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement\r\n} from \"chart.js\";\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement\r\n);\r\n\r\nconst Dashboard = () => {\r\n  // System performance state\r\n  const [systemStats, setSystemStats] = useState({\r\n    processedImages: 0,\r\n    successfulImages: 0,\r\n    avgProcessingTime: 0,\r\n    successRate: 0,\r\n    psnr: 0,\r\n    accuracy: 0,\r\n    contrastImprovement: 0,\r\n    mse: 0,\r\n    edgeSharpness: 0,\r\n    fogDensity: \"Light\"\r\n  });\r\n\r\n  // Historical and analytical data\r\n  const [processingHistory, setProcessingHistory] = useState([]);\r\n  const [recentActivity, setRecentActivity] = useState([]);\r\n  const [imageStats, setImageStats] = useState({\r\n    formats: [],\r\n    resolutions: [],\r\n    topPerformers: [],\r\n    worstPerformers: []\r\n  });\r\n  const [timeTrends, setTimeTrends] = useState([]);\r\n  \r\n  // Image inspection state\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [histogramData, setHistogramData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [ws, setWs] = useState(null);\r\n\r\n  // Initialize WebSocket connection\r\n  useEffect(() => {\r\n    const websocket = new WebSocket(\"ws://localhost:5000\");\r\n    setWs(websocket);\r\n\r\n    websocket.onopen = () => {\r\n      console.log(\"WebSocket connected\");\r\n      setIsLoading(false);\r\n    };\r\n\r\n    websocket.onmessage = (event) => {\r\n      const message = JSON.parse(event.data);\r\n      console.log(\"Received WebSocket message:\", message);\r\n\r\n      if (message.type === \"stats\") {\r\n        setSystemStats(message.data);\r\n      } else if (message.type === \"histogram\") {\r\n        setHistogramData(message.data);\r\n      } else if (message.type === \"activity\") {\r\n        setRecentActivity(prev => [message.data, ...prev.slice(0, 9)]);\r\n      }\r\n    };\r\n\r\n    websocket.onerror = (error) => {\r\n      console.error(\"WebSocket error:\", error);\r\n    };\r\n\r\n    websocket.onclose = () => {\r\n      console.log(\"WebSocket disconnected\");\r\n    };\r\n\r\n    return () => {\r\n      websocket.close();\r\n    };\r\n  }, []);\r\n\r\n  // Fetch initial data from backend\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const [\r\n          statsRes, \r\n          historyRes, \r\n          imageStatsRes, \r\n          timeTrendsRes,\r\n          activityRes\r\n        ] = await Promise.all([\r\n          axios.get(\"http://localhost:5000/api/system-stats\"),\r\n          axios.get(\"http://localhost:5000/api/processing-history\"),\r\n          axios.get(\"http://localhost:5000/api/image-stats\"),\r\n          axios.get(\"http://localhost:5000/api/time-trends\"),\r\n          axios.get(\"http://localhost:5000/api/recent-activity\")\r\n        ]);\r\n\r\n        setSystemStats(statsRes.data);\r\n        setProcessingHistory(historyRes.data);\r\n        setImageStats(imageStatsRes.data);\r\n        setTimeTrends(timeTrendsRes.data);\r\n        setRecentActivity(activityRes.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching initial data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  // Request histogram data when image is selected\r\n  useEffect(() => {\r\n    if (selectedImage && ws && ws.readyState === WebSocket.OPEN) {\r\n      ws.send(JSON.stringify({\r\n        type: \"requestHistogram\",\r\n        imageId: selectedImage._id\r\n      }));\r\n    }\r\n  }, [selectedImage, ws]);\r\n\r\n  // Chart data configurations\r\n  const historyChartData = {\r\n    labels: processingHistory.map(entry => entry.date),\r\n    datasets: [{\r\n      label: \"Processed Images\",\r\n      data: processingHistory.map(entry => entry.count),\r\n      borderColor: \"rgba(79, 70, 229, 1)\",\r\n      backgroundColor: \"rgba(79, 70, 229, 0.1)\",\r\n      borderWidth: 2,\r\n      tension: 0.1,\r\n      fill: true,\r\n    }]\r\n  };\r\n\r\n  const performanceChartData = {\r\n    labels: [\"PSNR\", \"Accuracy\", \"Contrast\", \"Edge Sharpness\"],\r\n    datasets: [{\r\n      label: \"Performance Metrics\",\r\n      data: [\r\n        systemStats.psnr,\r\n        systemStats.accuracy,\r\n        systemStats.contrastImprovement,\r\n        systemStats.edgeSharpness\r\n      ],\r\n      backgroundColor: [\r\n        \"rgba(99, 102, 241, 0.8)\",\r\n        \"rgba(236, 72, 153, 0.8)\",\r\n        \"rgba(16, 185, 129, 0.8)\",\r\n        \"rgba(245, 158, 11, 0.8)\"\r\n      ],\r\n      borderColor: [\r\n        \"rgba(79, 70, 229, 1)\",\r\n        \"rgba(219, 39, 119, 1)\",\r\n        \"rgba(5, 150, 105, 1)\",\r\n        \"rgba(217, 119, 6, 1)\"\r\n      ],\r\n      borderWidth: 1,\r\n    }]\r\n  };\r\n\r\n  const formatDistributionData = {\r\n    labels: imageStats.formats.map(f => f.format),\r\n    datasets: [{\r\n      data: imageStats.formats.map(f => f.count),\r\n      backgroundColor: [\r\n        \"rgba(99, 102, 241, 0.8)\",\r\n        \"rgba(236, 72, 153, 0.8)\",\r\n        \"rgba(16, 185, 129, 0.8)\",\r\n        \"rgba(245, 158, 11, 0.8)\"\r\n      ],\r\n      borderWidth: 1\r\n    }]\r\n  };\r\n\r\n  const timeTrendsData = {\r\n    labels: timeTrends.map(t => new Date(t.timestamp).toLocaleTimeString()),\r\n    datasets: [{\r\n      label: \"Processing Time (ms)\",\r\n      data: timeTrends.map(t => t.time),\r\n      borderColor: \"rgba(79, 70, 229, 1)\",\r\n      backgroundColor: \"rgba(79, 70, 229, 0.1)\",\r\n      borderWidth: 2,\r\n      tension: 0.1\r\n    }]\r\n  };\r\n\r\n  const histogramChartConfig = (channelData, channelColor) => ({\r\n    labels: Array.from({length: 256}, (_, i) => i),\r\n    datasets: [{\r\n      label: channelColor,\r\n      data: channelData,\r\n      backgroundColor: channelColor,\r\n      borderWidth: 0,\r\n      barPercentage: 1,\r\n      categoryPercentage: 1\r\n    }]\r\n  });\r\n\r\n  // UI Cards\r\n  const statsCards = [\r\n    { \r\n      title: \"Processed Images\", \r\n      value: systemStats.processedImages,\r\n      color: \"bg-indigo-100 text-indigo-800\",\r\n      icon: \"📊\"\r\n    },\r\n    { \r\n      title: \"Success Rate\", \r\n      value: `${systemStats.successRate.toFixed(2)}%`,\r\n      color: \"bg-purple-100 text-purple-800\",\r\n      icon: \"✅\"\r\n    },\r\n    {\r\n      title: \"Avg Time\",\r\n      value: `${systemStats.avgProcessingTime.toFixed(2)} ms`,\r\n      color: \"bg-blue-100 text-blue-800\",\r\n      icon: \"⏱️\"\r\n    },\r\n    {\r\n      title: \"Fog Density\",\r\n      value: systemStats.fogDensity,\r\n      color: \"bg-gray-100 text-gray-800\",\r\n      icon: \"🌫️\"\r\n    },\r\n    {\r\n      title: \"Edge Sharpness\",\r\n      value: systemStats.edgeSharpness.toFixed(2),\r\n      color: \"bg-green-100 text-green-800\",\r\n      icon: \"🔍\"\r\n    }\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500 mx-auto\"></div>\r\n          <p className=\"mt-4 text-lg font-medium text-gray-700\">Loading dashboard data...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-4 md:p-8\">\r\n      <header className=\"mb-8\">\r\n        <h1 className=\"text-2xl md:text-3xl font-bold text-gray-800\">Dehazing Analytics Dashboard</h1>\r\n        <p className=\"text-gray-600\">Real-time monitoring of image processing performance</p>\r\n      </header>\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4 mb-8\">\r\n        {statsCards.map((stat, index) => (\r\n          <div key={index} className={`p-6 rounded-lg shadow-sm border ${stat.color} transition-all hover:shadow-md`}>\r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-2xl mr-3\">{stat.icon}</span>\r\n              <div>\r\n                <h2 className=\"text-sm font-medium uppercase tracking-wider\">{stat.title}</h2>\r\n                <p className=\"text-2xl font-bold mt-1\">{stat.value}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Main Content Grid */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\r\n        {/* Processing History */}\r\n        <div className=\"lg:col-span-2 bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Processing History (Last 7 Days)</h2>\r\n          <div className=\"h-64\">\r\n            <Line \r\n              data={historyChartData} \r\n              options={{\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                plugins: { \r\n                  legend: { position: 'top' },\r\n                  tooltip: {\r\n                    callbacks: {\r\n                      label: (context) => `${context.dataset.label}: ${context.raw} images`\r\n                    }\r\n                  }\r\n                },\r\n                scales: { \r\n                  y: { \r\n                    beginAtZero: true,\r\n                    title: { display: true, text: 'Number of Images' }\r\n                  }\r\n                }\r\n              }} \r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Performance Metrics */}\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Quality Metrics</h2>\r\n          <div className=\"h-64\">\r\n            <Bar \r\n              data={performanceChartData} \r\n              options={{\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                plugins: { \r\n                  legend: { display: false },\r\n                  tooltip: {\r\n                    callbacks: {\r\n                      label: (context) => {\r\n                        const labels = [\"PSNR (dB)\", \"Accuracy (%)\", \"Contrast Δ\", \"Edge Sharpness\"];\r\n                        return `${labels[context.dataIndex]}: ${context.raw.toFixed(2)}`;\r\n                      }\r\n                    }\r\n                  }\r\n                },\r\n                scales: { \r\n                  y: { \r\n                    beginAtZero: true,\r\n                    title: { display: true, text: 'Score' }\r\n                  }\r\n                }\r\n              }} \r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Second Row */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\r\n        {/* Image Format Distribution */}\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Image Format Distribution</h2>\r\n          <div className=\"h-64\">\r\n            <Pie \r\n              data={formatDistributionData} \r\n              options={{\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                plugins: {\r\n                  tooltip: {\r\n                    callbacks: {\r\n                      label: (context) => `${context.label}: ${context.raw} images (${context.raw/systemStats.processedImages*100}%)`\r\n                    }\r\n                  }\r\n                }\r\n              }} \r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Processing Time Trends */}\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Processing Time Trends</h2>\r\n          <div className=\"h-64\">\r\n            <Line \r\n              data={timeTrendsData} \r\n              options={{\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                plugins: { \r\n                  legend: { position: 'top' },\r\n                  tooltip: {\r\n                    callbacks: {\r\n                      label: (context) => `${context.dataset.label}: ${context.raw}ms`\r\n                    }\r\n                  }\r\n                },\r\n                scales: { \r\n                  y: { \r\n                    beginAtZero: true,\r\n                    title: { display: true, text: 'Time (ms)' }\r\n                  }\r\n                }\r\n              }} \r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Performance Ranking */}\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Performance Ranking</h2>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <h3 className=\"font-medium text-green-700 mb-2\">Top Performers</h3>\r\n              <ul className=\"space-y-2\">\r\n                {imageStats.topPerformers.map((img, i) => (\r\n                  <li \r\n                    key={`top-${i}`} \r\n                    className={`flex justify-between p-2 rounded cursor-pointer hover:bg-gray-50 ${selectedImage?._id === img._id ? 'bg-indigo-50' : ''}`}\r\n                    onClick={() => setSelectedImage(img)}\r\n                  >\r\n                    <span className=\"truncate\">{img.name}</span>\r\n                    <span className=\"font-medium\">{img.score.toFixed(2)}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <h3 className=\"font-medium text-red-700 mb-2\">Worst Performers</h3>\r\n              <ul className=\"space-y-2\">\r\n                {imageStats.worstPerformers.map((img, i) => (\r\n                  <li \r\n                    key={`worst-${i}`} \r\n                    className={`flex justify-between p-2 rounded cursor-pointer hover:bg-gray-50 ${selectedImage?._id === img._id ? 'bg-indigo-50' : ''}`}\r\n                    onClick={() => setSelectedImage(img)}\r\n                  >\r\n                    <span className=\"truncate\">{img.name}</span>\r\n                    <span className=\"font-medium\">{img.score.toFixed(2)}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Histogram Comparison */}\r\n      {histogramData && selectedImage && (\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100 mb-8\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h2 className=\"text-lg font-semibold text-gray-800\">Histogram Analysis: {selectedImage.name}</h2>\r\n            <button \r\n              onClick={() => setSelectedImage(null)}\r\n              className=\"text-sm text-indigo-600 hover:text-indigo-800\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <h3 className=\"text-center font-medium mb-2\">Original Image</h3>\r\n              <div className=\"h-64\">\r\n                <Bar \r\n                  data={histogramChartConfig(\r\n                    histogramData.original.red,\r\n                    \"rgba(239, 68, 68, 0.7)\"\r\n                  )} \r\n                  options={{\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    plugins: { legend: { display: false } },\r\n                    scales: { y: { beginAtZero: true } }\r\n                  }} \r\n                />\r\n              </div>\r\n              <div className=\"h-64 mt-4\">\r\n                <Bar \r\n                  data={histogramChartConfig(\r\n                    histogramData.original.green,\r\n                    \"rgba(34, 197, 94, 0.7)\"\r\n                  )} \r\n                  options={{\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    plugins: { legend: { display: false } },\r\n                    scales: { y: { beginAtZero: true } }\r\n                  }} \r\n                />\r\n              </div>\r\n              <div className=\"h-64 mt-4\">\r\n                <Bar \r\n                  data={histogramChartConfig(\r\n                    histogramData.original.blue,\r\n                    \"rgba(59, 130, 246, 0.7)\"\r\n                  )} \r\n                  options={{\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    plugins: { legend: { display: false } },\r\n                    scales: { y: { beginAtZero: true } }\r\n                  }} \r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <h3 className=\"text-center font-medium mb-2\">Dehazed Image</h3>\r\n              <div className=\"h-64\">\r\n                <Bar \r\n                  data={histogramChartConfig(\r\n                    histogramData.dehazed.red,\r\n                    \"rgba(239, 68, 68, 0.7)\"\r\n                  )} \r\n                  options={{\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    plugins: { legend: { display: false } },\r\n                    scales: { y: { beginAtZero: true } }\r\n                  }} \r\n                />\r\n              </div>\r\n              <div className=\"h-64 mt-4\">\r\n                <Bar \r\n                  data={histogramChartConfig(\r\n                    histogramData.dehazed.green,\r\n                    \"rgba(34, 197, 94, 0.7)\"\r\n                  )} \r\n                  options={{\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    plugins: { legend: { display: false } },\r\n                    scales: { y: { beginAtZero: true } }\r\n                  }} \r\n                />\r\n              </div>\r\n              <div className=\"h-64 mt-4\">\r\n                <Bar \r\n                  data={histogramChartConfig(\r\n                    histogramData.dehazed.blue,\r\n                    \"rgba(59, 130, 246, 0.7)\"\r\n                  )} \r\n                  options={{\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    plugins: { legend: { display: false } },\r\n                    scales: { y: { beginAtZero: true } }\r\n                  }} \r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Recent Activity */}\r\n      <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\r\n        <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Recent Activity</h2>\r\n        <ul className=\"space-y-3\">\r\n          {recentActivity.map((activity, index) => (\r\n            <li key={index} className=\"p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors\">\r\n              <div className=\"flex justify-between\">\r\n                <p className=\"text-sm text-gray-700\">{activity.description}</p>\r\n                <span className=\"text-xs text-gray-500\">\r\n                  {new Date(activity.timestamp).toLocaleString()}\r\n                </span>\r\n              </div>\r\n              {activity.details && (\r\n                <p className=\"text-xs text-gray-500 mt-1\">{activity.details}</p>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}